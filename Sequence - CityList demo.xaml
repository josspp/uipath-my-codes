<Activity mc:Ignorable="sap sap2010" x:Class="Sequence___CityList_demo" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="389.6,1138.4" sap2010:WorkflowViewState.IdRef="Sequence___CityList_demo_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Let's recap the Activities and Methods used&#xD;&#xA;We started the project as a Sequence and created 2 List variables (“SpainCities” and “UKCities”).&#xD;&#xA;Since Collection variables have to be instantiated and populated with values, we used 2 different methods:&#xD;&#xA;For “SpainCities”, we instantiated and populated the List from the Variables Panel, using the expression new List (of String) from {&quot;MADRID&quot;,&quot;valencia&quot;, &quot;BARCELONA&quot;};&#xD;&#xA;For “UKCities”, we instantiated the List from the Variables Panel using the expression new List (of String) and populated it using ‘Add to Collection’ activities.&#xD;&#xA;We merged the 2 List variables in a newly created List variable (&quot;AllCities&quot;), using the Enumerable.Concat method inside an Assign activity. We've used the expression Enumerable.Concat(SpainCities.AsEnumerable, UKCities.AsEnumerable).ToList. &#xD;&#xA;.AsEnumerable is used to convert the 2 Lists to Enumerable data type, and then .ToList converts the outcome to List.&#xD;&#xA;We used an Invoke Method to sort the elements in the outcome List by selecting Sort in the MethodName field.&#xD;&#xA;We used a For Each activity to go through the elements in the “AllCities” variable and:&#xD;&#xA;Convert them to ProperCase using the StrConv method: StrConv(item, VbStrConv.ProperCase);&#xD;&#xA;Add the converted items to a newly created List variable (“AllCitiesProperCase”) using Add to Collection.&#xD;&#xA;We used a Write Line activity to display the converted values using the String.Join method: String.Join(&quot;,&quot;,AllCitiesProperCase)" DisplayName="Sequence___CityList_demo" sap:VirtualizedContainerService.HintSize="380.8,973.6" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:List(x:String)" Name="spainCities">
        <Variable.Default>
          <mva:VisualBasicValue x:TypeArguments="scg:List(x:String)" ExpressionText="new List(Of String) From {&quot;baRcelona&quot;,&quot;madrid&quot;,&quot;valencia&quot;}" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="scg:List(x:String)" Name="ukCities">
        <Variable.Default>
          <mva:VisualBasicValue x:TypeArguments="scg:List(x:String)" ExpressionText="new List(of String)" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="scg:List(x:String)" Name="allCitesunsorted" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="allCitesProperCase">
        <Variable.Default>
          <mva:VisualBasicValue x:TypeArguments="scg:List(x:String)" ExpressionText="new List(of String)" />
        </Variable.Default>
      </Variable>
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <AddToCollection x:TypeArguments="x:String" Collection="[ukCities]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="339.2,22.4" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" Item="LOndon" />
    <AddToCollection x:TypeArguments="x:String" Collection="[ukCities]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="339.2,22.4" sap2010:WorkflowViewState.IdRef="AddToCollection`1_2" Item="manchester" />
    <Assign sap:VirtualizedContainerService.HintSize="339.2,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:List(x:String)">[allCitesunsorted]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:List(x:String)">[Enumerable.Concat(spainCities.AsEnumerable(),ukCities.AsEnumerable()).ToList]</InArgument>
      </Assign.Value>
    </Assign>
    <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="339.2,133.6" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="Sort">
      <InvokeMethod.TargetObject>
        <InArgument x:TypeArguments="scg:List(x:String)">[allCitesunsorted]</InArgument>
      </InvokeMethod.TargetObject>
    </InvokeMethod>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="339.2,349.6" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[allCitesunsorted]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="item" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,215.2" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[item]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[StrConv(item,VbStrConv.ProperCase)]</InArgument>
              </Assign.Value>
            </Assign>
            <AddToCollection x:TypeArguments="x:String" Collection="[allCitesProperCase]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="262.4,22.4" sap2010:WorkflowViewState.IdRef="AddToCollection`1_3" Item="[item]" />
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="339.2,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[String.Join(&quot;,&quot;,allCitesProperCase)]" />
  </Sequence>
</Activity>