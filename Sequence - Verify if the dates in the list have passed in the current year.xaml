<Activity mc:Ignorable="sap sap2010" x:Class="Sequence___Verify_if_the_dates_in_the_list_have_passed_in_the_current_year" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1280,1329.6" sap2010:WorkflowViewState.IdRef="Sequence___Verify_if_the_dates_in_the_list_have_passed_in_the_current_year_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Verify if the dates in the list have passed in the current year&#xD;&#xA;Given an input list of strings in format dd.MM.yyyy, please check if any of the dates has the same month as current month and print that date to output. &#xD;&#xA; For the dates having a different month, print to output the number of days that passed/due from the current date to date from list (in the current year).&#xD;&#xA;Note: Initialize a list with the following value: new List(of String) from {&quot;01.02.1980&quot;, &quot;04.05.1985&quot;,&quot;06.08.1988&quot;,&quot;24.09.1999&quot;,&quot;18.11.1986&quot;,&quot;11.10.1983&quot;}&#xD;&#xA;Practice 2 Solution&#xD;&#xA;Use a 'ForEach' activity inside a sequence to iterate through all items in the list ('ForEach item in variablename') and use the following activities and methods in the Body:&#xD;&#xA;Create a DateTime variable (&quot;TmpDate&quot;) and use the 'DateTime.ParseExact' method within an 'Assign' activity to convert to DateTime: TmpDate = DateTime.ParseExact(InputDate, &quot;dd.MM.yyyy&quot;, nothing)&#xD;&#xA;Use an 'If' activity to verify if the item's month is the same with the current month: TmpDate.Month = DateTime.Now.Month:&#xD;&#xA;If the condition is met, print a message using the 'Write Line' activity and the 'String.Format' method.&#xD;&#xA;If the condition is not met, add a sequence with the following activities and methods: &#xD;&#xA;a. Create a new variable of TimeSpan type (&quot;TimeDifference&quot;) calculate the difference between the current month and the item's month using the 'Subtract' method in an 'Assign' activity: TimeDifference = Datetime.Now.Subtract(new DateTime(Datetime.Now.Year, TmpDate.Month, TmpDate.Day))&#xD;&#xA;b. Use an 'If' activity to verify if the date is in the future or in the past, by stating the condition as TimeDifference.Days &gt; 0 and print a different message for when the month has passed or is in the future using the 'String.Format' method in a 'Write Line' activity: String.Format( &quot;{0} days until the date {1}&quot;, Math.Abs(TimeDifference.Days).ToString, TmpDate.Day.ToString+ &quot;.&quot; + TmpDate.Month.ToString+&quot;.&quot;+DateTime.Now.Year.ToString" DisplayName="Sequence___Verify_if_the_dates_in_the_list_have_passed_in_the_current_year" sap:VirtualizedContainerService.HintSize="1290.4,1164.8" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:List(x:String)" Name="inputDates" />
      <Variable x:TypeArguments="s:DateTime" Name="tmpDate" />
      <Variable x:TypeArguments="x:TimeSpan" Name="dueDays" />
      <Variable x:TypeArguments="x:String" Name="difference" />
      <Variable x:TypeArguments="s:DateTime" Name="tmpDateThisYear" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign sap:VirtualizedContainerService.HintSize="1248.8,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:List(x:String)">[inputDates]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:List(x:String)">[new List(of String) from {"01.02.1980", "04.05.1985","06.08.1988","24.09.1999","18.11.1986","11.10.1983"}]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="1248.8,972" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[inputDates]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="item" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1213.6,837.6" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="1172,60" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="s:DateTime">[tmpDate]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="s:DateTime">[DateTime.ParseExact(item,"dd.MM.yyyy",Nothing)]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[tmpDate.Month = DateTime.Now.Month]" sap:VirtualizedContainerService.HintSize="1172,644.8" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Then>
                <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="MessageBox_6" Text="[String.Format(&quot;the date {0} is of the same month&quot;,tmpDate)]" />
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="794.4,495.2" sap2010:WorkflowViewState.IdRef="Sequence_3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="752.8,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:TimeSpan">[dueDays]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:TimeSpan">[DateTime.Now.Subtract(New DateTime(DateTime.Now.Year,tmpDate.Month,tmpDate.Day))]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <If Condition="[dueDays.Days &gt; 0]" sap:VirtualizedContainerService.HintSize="752.8,302.4" sap2010:WorkflowViewState.IdRef="If_2">
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="375.2,152.8" sap2010:WorkflowViewState.IdRef="Sequence_4">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="MessageBox_8" Text="[&quot;The date &quot;+String.Format(&quot;{0}.{1}.{2}&quot;,tmpDate.Day,tmpDate.Month,DateTime.Now.Year)+&quot; has already passed and due by &quot;+Math.Abs(dueDays.Days).ToString+&quot; days&quot;]" />
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="MessageBox_7" Text="[&quot;The date &quot;+String.Format(&quot;{0}.{1}.{2}&quot;,tmpDate.Day,tmpDate.Month,DateTime.Now.Year)+&quot; is in future, untill &quot;+Math.Abs(dueDays.Days).ToString+&quot; days&quot;]" />
                    </If.Else>
                  </If>
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
  </Sequence>
</Activity>