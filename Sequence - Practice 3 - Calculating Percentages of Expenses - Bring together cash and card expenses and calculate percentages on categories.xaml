<Activity mc:Ignorable="sap sap2010" x:Class="Sequence___Practice_3___Calculating_Percentages_of_Expenses___Bring_together_cash_and_card_expenses_and_calculate_percentages_on_categories" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1120.8,5317.6" sap2010:WorkflowViewState.IdRef="Sequence___Practice_3___Calculating_Percentages_of_Expenses___Bring_together_cash_and_card_expenses_and_calculate_percentages_on_categories_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="24">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="18">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Bring together cash and card expenses and calculate percentages on categories&#xD;&#xA;We have a list of expenses (rent, food, utilities, leisure, savings) for which card payments were made. We have discovered that some transactions are missing, as they were done in cash. Prepare a workflow to bring all the expenses in a single file and calculate the percentages for each expense made.&#xD;&#xA;Input files:&#xD;&#xA;CardPayments (.xlsx)&#xD;&#xA;CashPayments (.xlsx)&#xD;&#xA;&#xD;&#xA;CardPayments.xlsx&#xD;&#xA;9.4 KB&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;CashPayments.xlsx&#xD;&#xA;8.2 KB&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Practice 3 Solution&#xD;&#xA;&#xD;&#xA;Use 2 'Read Range' activities to read the data in both files and store them in 2 DataTable variables - &quot;CardExpensesDT&quot; and &quot;CashExpensesDT&quot;. Please remember to check the 'AddHeaders' option in for both activities;&#xD;&#xA;Next, you need to get all the data into a single DataTable. The easiest way is to bring the entries from &quot;CashExpensesDT&quot; into &quot;CardExpensesDT&quot;. For this, you need to loop through the &quot;CashExpensesDT&quot; using a 'For Each Row' activity. In the Body:&#xD;&#xA; 1. Use 2 'Get Row Item' activities to capture the info in the &quot;Expense&quot; and &quot;Date&quot; columns and store them in newly created variables (&quot;ExpenseName&quot; and &quot;ExpenseData&quot;);&#xD;&#xA; 2. Use an 'Assign' activity to store the values of the expenses and store them into a new variable (&quot;ExpenseValue&quot;). The method should look like this: ExpenseValue = row(&quot;Value&quot;).toString;&#xD;&#xA; 3. Use an 'Add Data Row' activity to add the values of the 3 variables in the &quot;CardExpensesDT&quot; variable by writing {ExpenseName, ExpenseData, ExpenseValue} under 'ArrayRow';&#xD;&#xA;Next, you need to group the expenses by month in order to calculate the percentages. For this, you need to iterate through the rows of &quot;CardExpensesDT&quot; using 'For Each Row' and add the month to a list of strings called &quot;Months&quot;. In the Body:&#xD;&#xA; 1. Get the date value from the row with a 'Get Row Item' activity and parse the date in order to get the month. The method should look like this: ExpenseDate.Remove(0, 3).Remove(2, 5). What it does is to remove the first the days and then the year;&#xD;&#xA; 2. If the &quot;Months&quot; collection does not contain the month from the current row, add it. This is done using an 'If statement' activity;&#xD;&#xA;Next, you need to build a DataTable which will be written to the file. Drag a 'Build DataTable' activity and set the headers (&quot;Expense&quot;, &quot;Date&quot;, &quot;Value&quot; and &quot;Percentage&quot;, which is new). You can call the new DataTable variable &quot;monthlyDT&quot;.&#xD;&#xA;Use a 'For Each' activity and loop through the &quot;Months&quot; collection. In the Body:&#xD;&#xA; 1. Use a 'Clear Data Table' activity to make sure &quot;monthlyDT&quot; is always empty at the beginning of each loop. Also, use an 'Assign' activity to reset the value of &quot;monthlyTotal&quot; variable to 0 (this variable will be used to store the total value of the expenses in one month)&#xD;&#xA; 2. If the expense month is equal to the month in the loop, add a new row to &quot;monthlyDT&quot;.&#xD;&#xA; 3. Iterate again through the rows of &quot;CardExpensesDT&quot; using 'For Each Row' and:&#xD;&#xA; - Use 2 'Get Row Item' activities to capture the info in the &quot;Expense&quot; and &quot;Date&quot; columns and store them in variables (&quot;ExpenseName&quot; and &quot;ExpenseData&quot;);&#xD;&#xA; - Use an 'Assign' activity to store the values of the expenses and store them into a new variable (&quot;ExpenseValue&quot;). The method should look like this: ExpenseValue = row(&quot;Value&quot;).toString;&#xD;&#xA; - Use another 'Assign' to extract the month and assign it to &quot;ExpenseMonth&quot; variable using the same method as above;&#xD;&#xA; - Use an 'If statement' to check whether the value of &quot;ExpenseMonth&quot;  is equal to the current month through which the looping is done; if so, increase the monthlyTotal with the value of the expense using the following method: Int32.Parse(ExpenseValue);&#xD;&#xA; - Use a 'For Each Row' to iterate through the &quot;monthlyDT&quot; variable and fill in the &quot;Percentage&quot; column using an 'Assign' activity and the following method: row(&quot;Percentage&quot;) = (int32.Parse(row(&quot;Value&quot;).ToString) * 100 / monthlyTotal).ToString;&#xD;&#xA;Finally, write the expenses to the AllPayments.xlsx file. You can use the 'Append Range' workbook activity, but it will not write the headers. So, for the first loop, use the 'Write Range' workbook activity.&#xD;&#xA;Download&#xD;&#xA;Download the workflow below to see the complete solution.&#xD;&#xA;&#xD;&#xA;Practice 3 - Calculating Percentages of Expenses.zip&#xD;&#xA;26 KB" DisplayName="Sequence___Practice_3___Calculating_Percentages_of_Expenses___Bring_together_cash_and_card_expenses_and_calculate_percentages_on_categories" sap:VirtualizedContainerService.HintSize="692.8,5152.8" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="cashDT" />
      <Variable x:TypeArguments="sd:DataTable" Name="cardDT" />
      <Variable x:TypeArguments="x:String" Name="cardDTstring" />
      <Variable x:TypeArguments="x:String" Name="cashDTstring" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="electricityTotal" />
      <Variable x:TypeArguments="x:Int32" Name="foodTotal">
        <Variable.Default>
          <Literal x:TypeArguments="x:Int32" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:Int32" Name="grandTotal">
        <Variable.Default>
          <Literal x:TypeArguments="x:Int32" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="sd:DataTable" Name="tempDT" />
      <Variable x:TypeArguments="x:String" Name="tempDTstring" />
      <Variable x:TypeArguments="x:String" Name="expense" />
      <Variable x:TypeArguments="x:String" Name="dateItem" />
      <Variable x:TypeArguments="x:String" Name="monthItem" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="monthList">
        <Variable.Default>
          <mva:VisualBasicValue x:TypeArguments="scg:List(x:String)" ExpressionText="new List(of String)" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="sd:DataTable" Name="monthlyDT" />
      <Variable x:TypeArguments="x:Int32" Name="monthlyTotal">
        <Variable.Default>
          <Literal x:TypeArguments="x:Int32" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="value" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ReadRange AddHeaders="True" DataTable="[cardDT]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="651.2,88" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="Sheet1" WorkbookPath="D:\UIPath\From training site\Practice\CardPayments.xlsx">
      <ui:ReadRange.Range>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </ui:ReadRange.Range>
    </ui:ReadRange>
    <ui:ReadRange AddHeaders="True" DataTable="[cashDT]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="651.2,88" sap2010:WorkflowViewState.IdRef="ReadRange_2" SheetName="Sheet1" WorkbookPath="D:\UIPath\From training site\Practice\CashPayments.xlsx">
      <ui:ReadRange.Range>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </ui:ReadRange.Range>
    </ui:ReadRange>
    <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[cashDT]" DisplayName="For Each Row - add cashDT to cardDT" sap:VirtualizedContainerService.HintSize="651.2,573.6" sap2010:WorkflowViewState.IdRef="ForEachRow_5">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="375.2,424.8" sap2010:WorkflowViewState.IdRef="Sequence_6">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:GetRowItem Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="Expense" DisplayName="Get Row Item - expense" sap:VirtualizedContainerService.HintSize="333.6,64.8" sap2010:WorkflowViewState.IdRef="GetRowItem_1" Row="[row]">
              <ui:GetRowItem.Value>
                <OutArgument x:TypeArguments="x:String">[expense]</OutArgument>
              </ui:GetRowItem.Value>
            </ui:GetRowItem>
            <ui:GetRowItem Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="Date" DisplayName="Get Row Item - dateItem" sap:VirtualizedContainerService.HintSize="333.6,64.8" sap2010:WorkflowViewState.IdRef="GetRowItem_2" Row="[row]">
              <ui:GetRowItem.Value>
                <OutArgument x:TypeArguments="x:String">[dateItem]</OutArgument>
              </ui:GetRowItem.Value>
            </ui:GetRowItem>
            <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_11">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[value]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[row("Value").ToString]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{expense,dateItem,value}]" DataTable="[cardDT]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
    </ui:ForEachRow>
    <ui:OutputDataTable DataTable="[cardDT]" DisplayName="Output Data Table" sap:VirtualizedContainerService.HintSize="651.2,22.4" sap2010:WorkflowViewState.IdRef="OutputDataTable_6" Text="[cardDTstring]" />
    <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="651.2,60" sap2010:WorkflowViewState.IdRef="MessageBox_10" Text="[cardDTstring]" />
    <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[cardDT]" DisplayName="For Each Row - take month value from date for grouping" sap:VirtualizedContainerService.HintSize="651.2,729.6" sap2010:WorkflowViewState.IdRef="ForEachRow_6">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
          </ActivityAction.Argument>
          <Sequence sap:VirtualizedContainerService.HintSize="524.8,580.8" sap2010:WorkflowViewState.IdRef="Sequence_7">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:GetRowItem Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="Date" DisplayName="Get Row Item - monthItem" sap:VirtualizedContainerService.HintSize="483.2,64.8" sap2010:WorkflowViewState.IdRef="GetRowItem_3" Row="[row]">
              <ui:GetRowItem.Value>
                <OutArgument x:TypeArguments="x:String">[monthItem]</OutArgument>
              </ui:GetRowItem.Value>
            </ui:GetRowItem>
            <Assign sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_12">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[monthItem]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[monthItem.Remove(0,3).Remove(2,5)]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[monthList.Contains(monthItem)]" DisplayName="If - to add month to list" sap:VirtualizedContainerService.HintSize="483.2,283.2" sap2010:WorkflowViewState.IdRef="If_8">
              <If.Else>
                <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="236.8,133.6" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="Add">
                  <InvokeMethod.TargetObject>
                    <InArgument x:TypeArguments="scg:List(x:String)">[monthList]</InArgument>
                  </InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="x:String">
                    <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="monthItem" />
                  </InArgument>
                </InvokeMethod>
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
    </ui:ForEachRow>
    <ui:BuildDataTable DataTable="[monthlyDT]" DisplayName="Build Data Table - monthlyDT" sap:VirtualizedContainerService.HintSize="651.2,60" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xD;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xD;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xD;&#xA;      &lt;xs:complexType&gt;&#xD;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xD;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xD;&#xA;            &lt;xs:complexType&gt;&#xD;&#xA;              &lt;xs:sequence&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Expense&quot;&gt;&#xD;&#xA;                  &lt;xs:simpleType&gt;&#xD;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xD;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xD;&#xA;                    &lt;/xs:restriction&gt;&#xD;&#xA;                  &lt;/xs:simpleType&gt;&#xD;&#xA;                &lt;/xs:element&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Date&quot;&gt;&#xD;&#xA;                  &lt;xs:simpleType&gt;&#xD;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xD;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xD;&#xA;                    &lt;/xs:restriction&gt;&#xD;&#xA;                  &lt;/xs:simpleType&gt;&#xD;&#xA;                &lt;/xs:element&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Value&quot;&gt;&#xD;&#xA;                  &lt;xs:simpleType&gt;&#xD;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xD;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xD;&#xA;                    &lt;/xs:restriction&gt;&#xD;&#xA;                  &lt;/xs:simpleType&gt;&#xD;&#xA;                &lt;/xs:element&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Percentage&quot; minOccurs=&quot;0&quot;&gt;&#xD;&#xA;                  &lt;xs:simpleType&gt;&#xD;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xD;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xD;&#xA;                    &lt;/xs:restriction&gt;&#xD;&#xA;                  &lt;/xs:simpleType&gt;&#xD;&#xA;                &lt;/xs:element&gt;&#xD;&#xA;              &lt;/xs:sequence&gt;&#xD;&#xA;            &lt;/xs:complexType&gt;&#xD;&#xA;          &lt;/xs:element&gt;&#xD;&#xA;        &lt;/xs:choice&gt;&#xD;&#xA;      &lt;/xs:complexType&gt;&#xD;&#xA;    &lt;/xs:element&gt;&#xD;&#xA;  &lt;/xs:schema&gt;&#xD;&#xA;&lt;/NewDataSet&gt;" />
    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="651.2,2170.4" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[monthList]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="616,2036" sap2010:WorkflowViewState.IdRef="Sequence_9">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="monthlyDTstring" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ClearDataTable DataTable="[monthlyDT]" DisplayName="Clear Data Table" sap:VirtualizedContainerService.HintSize="574.4,22.4" sap2010:WorkflowViewState.IdRef="ClearDataTable_3" />
            <Assign sap:VirtualizedContainerService.HintSize="574.4,60" sap2010:WorkflowViewState.IdRef="Assign_13">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[monthlyTotal]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">0</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[cardDT]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="574.4,1120.8" sap2010:WorkflowViewState.IdRef="ForEachRow_7">
              <ui:ForEachRow.Body>
                <ActivityAction x:TypeArguments="sd:DataRow">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="524.8,972" sap2010:WorkflowViewState.IdRef="Sequence_8">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:GetRowItem Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="Date" DisplayName="Get Row Item - monthItem" sap:VirtualizedContainerService.HintSize="483.2,64.8" sap2010:WorkflowViewState.IdRef="GetRowItem_4" Row="[row]">
                      <ui:GetRowItem.Value>
                        <OutArgument x:TypeArguments="x:String">[monthItem]</OutArgument>
                      </ui:GetRowItem.Value>
                    </ui:GetRowItem>
                    <Assign sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[monthItem]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[monthItem.Remove(0,3).Remove(2,5)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:GetRowItem Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="Expense" DisplayName="Get Row Item - expense" sap:VirtualizedContainerService.HintSize="483.2,64.8" sap2010:WorkflowViewState.IdRef="GetRowItem_5" Row="[row]">
                      <ui:GetRowItem.Value>
                        <OutArgument x:TypeArguments="x:String">[expense]</OutArgument>
                      </ui:GetRowItem.Value>
                    </ui:GetRowItem>
                    <ui:GetRowItem Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="Date" DisplayName="Get Row Item - dateItem" sap:VirtualizedContainerService.HintSize="483.2,64.8" sap2010:WorkflowViewState.IdRef="GetRowItem_6" Row="[row]">
                      <ui:GetRowItem.Value>
                        <OutArgument x:TypeArguments="x:String">[dateItem]</OutArgument>
                      </ui:GetRowItem.Value>
                    </ui:GetRowItem>
                    <Assign sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[value]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[row("Value").ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <If Condition="[item.ToString=monthItem.ToString]" sap:VirtualizedContainerService.HintSize="483.2,364.8" sap2010:WorkflowViewState.IdRef="If_9">
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="304,215.2" sap2010:WorkflowViewState.IdRef="Sequence_11">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">[monthlyTotal]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">[monthlyTotal+Integer.Parse(value.ToString)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{expense,dateItem,value}]" DataTable="[monthlyDT]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="262.4,22.4" sap2010:WorkflowViewState.IdRef="AddDataRow_2" />
                        </Sequence>
                      </If.Then>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEachRow.Body>
            </ui:ForEachRow>
            <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[monthlyDT]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="574.4,301.6" sap2010:WorkflowViewState.IdRef="ForEachRow_8">
              <ui:ForEachRow.Body>
                <ActivityAction x:TypeArguments="sd:DataRow">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,152.8" sap2010:WorkflowViewState.IdRef="Sequence_10">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[row("Percentage")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">[(Integer.Parse(row("Value").ToString)*100)/monthlyTotal]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ActivityAction>
              </ui:ForEachRow.Body>
            </ui:ForEachRow>
            <ui:OutputDataTable DataTable="[monthlyDT]" DisplayName="Output Data Table" sap:VirtualizedContainerService.HintSize="574.4,22.4" sap2010:WorkflowViewState.IdRef="OutputDataTable_7" Text="[monthlyDTstring]" />
            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="574.4,60" sap2010:WorkflowViewState.IdRef="MessageBox_11" Text="[monthlyDTstring]" />
            <ui:AppendRange DataTable="[monthlyDT]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="574.4,116" sap2010:WorkflowViewState.IdRef="AppendRange_1" SheetName="Sheet1" WorkbookPath="D:\UIPath\From training site\Practice\FinalPaymentswithPercentage.xlsx" />
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
  </Sequence>
</Activity>