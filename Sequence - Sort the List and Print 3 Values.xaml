<Activity mc:Ignorable="sap sap2010" x:Class="Sequence___Sort_the_List_and_Print_3_Values" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="389.6,1450.4" sap2010:WorkflowViewState.IdRef="Sequence___Sort_the_List_and_Print_3_Values_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Sort the List and Print 3 Values&#xD;&#xA;Given an input list of countries please sort the list and print the first 3 values in descending order.&#xD;&#xA;Note: Please use this value for the List initialization: new List(of String) from {&quot;Germany&quot;, &quot;Spain&quot;, &quot;Japan&quot;, &quot;Brazil&quot;, &quot;India&quot;, &quot;China&quot;}.&#xD;&#xA;Practice 1 Solution&#xD;&#xA;Start the project as a sequence and define a List of Strings variable (“countries”) with the following default value: new List(of String) from {&quot;Germany&quot;, &quot;Spain&quot;, &quot;Japan&quot;, &quot;Brazil&quot;, &quot;India&quot;, &quot;China&quot;}.&#xD;&#xA;Add an 'Invoke Method' activity and write 'Sort' under MethodName and “countries” under TargetObject. Leave the TargetType unchanged (null).&#xD;&#xA;Add an 'Invoke Method' activity. Write 'Reverse' under MethodName and have the other 2 fields just like in the previous 'Invoke Method'&#xD;&#xA;Print the extracted values using a 'Write Line' activity and the 'String.Join' and the ‘GetRange’ methods: String.Join (&quot;, &quot;, countries.GetRange(0,3)).&#xD;&#xA;Add one more 'Invoke Method' activity.&#xD;&#xA;Type 'Reverse' in the MethodName field.&#xD;&#xA;In the TargetObject field, type the name of the original variable.&#xD;&#xA;Leave the TargetType unchanged (null).&#xD;&#xA;Create a new List of String variable.&#xD;&#xA;Add an 'Assign' activity to the Designer panel.&#xD;&#xA;In the To field, enter the variable created at step 11.&#xD;&#xA;In the Value field, enter the name of the original variable, followed by .GetRange(0,3). This variable stores the first three values in the sorted list.&#xD;&#xA;Print the extracted values using a 'Write Line' activity.&#xD;&#xA;Use the 'String.Join' method: String.Join (&quot;, &quot;, secondvariablename.ToArray)." DisplayName="Sequence___Sort_the_List_and_Print_3_Values" sap:VirtualizedContainerService.HintSize="304,1285.6" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:List(x:String)" Name="countryList" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="secondList" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:List(x:String)">[countryList]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:List(x:String)">[new List(of String) from {"Germany", "Spain", "Japan", "Brazil", "India", "China"}]</InArgument>
      </Assign.Value>
    </Assign>
    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="262.4,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[String.Join(&quot;,&quot;,countryList)]" />
    <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="262.4,133.6" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="Sort">
      <InvokeMethod.TargetObject>
        <InArgument x:TypeArguments="scg:List(x:String)">[countryList]</InArgument>
      </InvokeMethod.TargetObject>
    </InvokeMethod>
    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="262.4,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="[String.Join(&quot;,&quot;,countryList)]" />
    <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="262.4,133.6" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="Reverse">
      <InvokeMethod.TargetObject>
        <InArgument x:TypeArguments="scg:List(x:String)">[countryList]</InArgument>
      </InvokeMethod.TargetObject>
    </InvokeMethod>
    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="262.4,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[String.Join(&quot;,&quot;,countryList)]" />
    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="262.4,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_4" Text="[String.Join(&quot;,&quot;,countryList.GetRange(0,3))]" />
    <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="262.4,133.6" sap2010:WorkflowViewState.IdRef="InvokeMethod_3" MethodName="Reverse">
      <InvokeMethod.TargetObject>
        <InArgument x:TypeArguments="scg:List(x:String)">[countryList]</InArgument>
      </InvokeMethod.TargetObject>
    </InvokeMethod>
    <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:List(x:String)">[secondList]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:List(x:String)">[countryList.GetRange(0,3)]</InArgument>
      </Assign.Value>
    </Assign>
    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="262.4,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_5" Text="[String.Join(&quot;,&quot;,secondList.ToArray)]" />
  </Sequence>
</Activity>